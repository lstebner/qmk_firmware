#pragma once

#if (!defined(LAYOUT) && defined(KEYMAP))
#define LAYOUT  KEYMAP
#endif


// remappings with nicer names
#define CMD     KC_LGUI
#define ALT     KC_LALT
#define CTRL    KC_LCTL
#define SPACE   KC_SPC
#define ENTER   KC_ENT


// convenient rows

#define KG_NUMBER_KEYS   KC_1, KC_2, KC_3, KC_4, KC_5, KC_6, KC_7, KC_8, KC_9, KC_0
#define KG_QWERTYUIOP    KC_Q, KC_W, KC_E, KC_R, KC_T, KC_Y, KC_U, KC_I, KC_O, KC_P
#define KG_ASDFGHJKL     KC_A, KC_S, KC_D, KC_F, KC_G, KC_H, KC_J, KC_K, KC_L
#define KG_ZXCVBNM       KC_Z, KC_X, KC_C, KC_V, KC_B, KC_N, KC_M


// this is a complete row
#define ROW_NUM_60          KC_GESC, KG_NUMBER_KEYS, KC_MINS, KC_EQL, KC_BSPC
// this is a complete row
#define ROW_QWERTY_60       KC_TAB, KG_QWERTYUIOP, KC_LBRC, KC_RBRC, KC_BSLS
// this row needs an initial key added for capslock when used
#define ROW_ASDF_60         KG_ASDFGHJKL, KC_SCLN, KC_QUOT, KC_ENT
// this row needs a trailing key added for right shift when used
#define ROW_SHIFT_60        KC_LSFT, KG_ZXCVBNM, KC_COMM, KC_DOT, KC_SLSH


// wrapper's should go somewhere else
#define LAYOUT_WRAPPER(...)           LAYOUT(__VA_ARGS__)
#define KEYMAP_WRAPPER(...)           LAYOUT(__VA_ARGS__)
#define LAYOUT_60_ansi_wrapper(...)   LAYOUT_60_ansi(__VA_ARGS__)
#define LAYOUT_niu_wrapper(...)       LAYOUT_ortho_4x12(__VA_ARGS__)


